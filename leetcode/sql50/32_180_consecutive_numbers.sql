--#!/usr/bin/env psql --no-password test
/*
Table: Logs
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| num         | varchar |
+-------------+---------+
In SQL, id is the primary key for this table.
id is an autoincrement column starting from 1.


Find all numbers that appear at least three times consecutively.

Return the result table in any order.

The result format is in the following example.


Example 1:
Input: 
Logs table:
+----+-----+
| id | num |
+----+-----+
| 1  | 1   |
| 2  | 1   |
| 3  | 1   |
| 4  | 2   |
| 5  | 1   |
| 6  | 2   |
| 7  | 2   |
+----+-----+
Output: 
+-----------------+
| ConsecutiveNums |
+-----------------+
| 1               |
+-----------------+
Explanation: 1 is the only number that appears consecutively for at least three times.
*/
BEGIN;

SAVEPOINT "test";

CREATE TABLE Logs (
  id int PRIMARY key generated BY DEFAULT AS IDENTITY (
    SEQUENCE NAME logs_id_seq INCREMENT BY 1 MINVALUE 1 NO MAXVALUE START
    WITH
      1 NO CYCLE
  ),
  num int
);

INSERT INTO
  Logs (id, num)
VALUES
  ('1', '1'),
  ('2', '1'),
  ('3', '1'),
  ('4', '2'),
  ('5', '1'),
  ('6', '2'),
  ('7', '2');

WITH
  with_nulls AS (
    SELECT DISTINCT
      CASE
        WHEN count(num) OVER (
          PARTITION BY
            num
          ORDER BY
            id RANGE BETWEEN 1 preceding
            AND 1 following
        ) >= 3 THEN num
        ELSE NULL
      END AS "ConsecutiveNums"
    FROM
      Logs
  )
SELECT
  *
FROM
  with_nulls
WHERE
  "ConsecutiveNums" IS NOT NULL;

ROLLBACK TO "test";

ROLLBACK;
